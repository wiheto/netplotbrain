{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Netplotbrain Painlessly plot networks on brains. Benefits of netplotbrain Simple to use and lots of customation. Integration with TemplateFlow to ensure accurate images. Flexibility to create the image you want. Installation pip install netplotbrain Add the -U flag to upgrade from an earlier version. How to use? Look at the gallery or examples and the tutorial for more information. Get involved? Let us know if you would like to help!","title":"Netplotbrain"},{"location":"#netplotbrain","text":"Painlessly plot networks on brains.","title":"Netplotbrain"},{"location":"#benefits-of-netplotbrain","text":"Simple to use and lots of customation. Integration with TemplateFlow to ensure accurate images. Flexibility to create the image you want.","title":"Benefits of netplotbrain"},{"location":"#installation","text":"pip install netplotbrain Add the -U flag to upgrade from an earlier version.","title":"Installation"},{"location":"#how-to-use","text":"Look at the gallery or examples and the tutorial for more information.","title":"How to use?"},{"location":"#get-involved","text":"Let us know if you would like to help!","title":"Get involved?"},{"location":"api/","text":"API Full list of KWARGS Here is the full list of keyword arguments (KWARGS) that can be used along with netplotbrain.plot . Below they are split up in the following sections Node KWARGS - modify the nodes. Edge KWARGS - modify the edges. Template KWARGS - modify the template. Legend KWARGS - modify the figure legend. Arrow KWARGS - modify the direction arrows. Figure KWARGS - configure the figure as a whole. GIF KWARGS - when exporting as a gif. Text KWARGS - text related variables. Profile KWARGS - setting a style profile for all kwargs. NODE KWARGS Argument Type Description nodecmap str Matplotlib colormap for node coloring with nodecolorby. nodecolor matplotlib coloring Can be string (default 'black') or list of 3D/4D colors for each edge. nodetype str Can be 'spheres', 'circles', or (if nodeimg is specified) 'parcels'. nodealpha float Specify the transparency of the nodes nodecols list Node column names in node dataframe. 'auto' entails the columns are ['x', 'y', 'z'] (specifying coordinates) nodesizevminvmax str, list Scaling alternatives if nodesize is given. Alternatives: 'absolute' (default) 'minmax', or 2-tuple list of [min, max]. If minmax, node sizes are scaled between (0 and 1) * nodescale. If absolute, then the default values are used. Absolute can lead to problems with, for example, negative values. nodecolorvminvmax str, list Scales continuous colormap between certain values. Alternatives: 'minmax' (default), 'absmax', , or 2-tuple list of [min, max]. If minmax, colorbar starts at the smallest value to largest value. If absmax, then colorbar goes from -abs(max(value)) to abs(max(value)), ensuring 0 is in the middle. EDGE KWARGS Argument Type Description edgecols list Edge columns names in edge dataframe. Default is i and j (specifying nodes). edgecolor matplotlib coloring Can be string (default 'black') or list of 3D/4D colors for each edge. edgewidth int, float Specify width of edges. If auto, will plot the value in edge array (if array) or the weight column (if in pandas dataframe), otherwise 2. edgeweights str String that specifies column in edge dataframe that contains weights. If numpy array is edge input, can be True (default) to specify edge weights. edgealpha float Transparency of edges (default: 1). edgehighlightbehaviour str Alternatives \"both\" or \"any\" or None. Governs edge dimming when highlightnodes is on. If both, then highlights only edges between highlighted nodes. If any, then only edges connecting any of the nodes are highlighted. edgewidthscale int, float Scale the width of all edges by a factor (default: 1) TEMPLATE KWARGS Argument Type Description templatecolor str If templatestyle=='surface' or 'filled', the color of template voxels templateedgethreshold float If templatestyle=='cloudy', can tweak the edges detection threshold. (Default: 0.7) templatealpha float Opacity of template voxels. templatevoxelsize int Resize voxels this size. Larger voxels = quicker. (Default: 2) surface_detection float The value used to detect the surface boundary (see argument level in marching_cubes). Some default choices are made for various templates surface_resolution int If templatestyle=='surface' controls the size of the triangles used in the surface reconstruction. (Default: 2). LEGENDKWARGS Argument Type Description nodecolorlegend Bool If the colorlegend is plotted or not. Default True. nodesizelegend Bool If the sizelegend is plotted or not. Default True. nodecolorlegendstyle str Alternatives: auto (default), discrete, continuous. If the color legend should show the entire colormap or discrete colors. If auto, plots discrete if less than 8 unique values are detected. legendtickfontsize str, int Matplotlib fontsize for title in figure legends legendtitlefontsize str, int Matplotlib fontsize for ticks in figure legends ARROW KWARGS Argument Type Description arrowaxis list or str Adds axis arrows onto plot. Alternatives are: LR, AP, SI, 'all' arrowlength int, float Length of arrow arroworigin list x,y,z coordinates of arrowaxis. Note 0,0,0 is bottom left. FIGURE KWARGS Argument Type Description ax matplotlib 3D ax fig = plt.figure(). ax = fig.add_subplot(111, projection='3d'). netplotbrain.plot(ax, ...) fig matplotlib figure savename str Save path for figure. If string ends with .png or .svg it will one save this figure. if the path ends with anything else, it will save both a .png and .svg figure. Default: None and nothing is saved. figdpi int 300 Default. R esolution of figure when saving png files. GIF KWARGS Argument Type Description gif bool If true, saves views as a gif. gifduration int Gif duration in milliseconds gifloop int How many times to loop figure. 0 (default) entails infinite loop. TEXT KWARGS Argument Type Description font str font for all text in figure. fontcolor str, list, tuple font color for all text in figure titlefontsize str Size of title font (default: medium). See matplotlib \"fontsize\" titleloc str, Location of title (default: center). See matplotlib \"loc\" titleweight str Font weight of title (default: regular). See matplotlib \"fontweight\" PROFILE KWARGS Argument Type Description profile str path or name of file in netplotbrain/profiles/ .json, specifies default kwargs. Default points to netplotbrain/profiles/default.json","title":"Api"},{"location":"api/#api","text":"","title":"API"},{"location":"api/#full-list-of-kwargs","text":"Here is the full list of keyword arguments (KWARGS) that can be used along with netplotbrain.plot . Below they are split up in the following sections Node KWARGS - modify the nodes. Edge KWARGS - modify the edges. Template KWARGS - modify the template. Legend KWARGS - modify the figure legend. Arrow KWARGS - modify the direction arrows. Figure KWARGS - configure the figure as a whole. GIF KWARGS - when exporting as a gif. Text KWARGS - text related variables. Profile KWARGS - setting a style profile for all kwargs.","title":"Full list of KWARGS"},{"location":"api/#node-kwargs","text":"Argument Type Description nodecmap str Matplotlib colormap for node coloring with nodecolorby. nodecolor matplotlib coloring Can be string (default 'black') or list of 3D/4D colors for each edge. nodetype str Can be 'spheres', 'circles', or (if nodeimg is specified) 'parcels'. nodealpha float Specify the transparency of the nodes nodecols list Node column names in node dataframe. 'auto' entails the columns are ['x', 'y', 'z'] (specifying coordinates) nodesizevminvmax str, list Scaling alternatives if nodesize is given. Alternatives: 'absolute' (default) 'minmax', or 2-tuple list of [min, max]. If minmax, node sizes are scaled between (0 and 1) * nodescale. If absolute, then the default values are used. Absolute can lead to problems with, for example, negative values. nodecolorvminvmax str, list Scales continuous colormap between certain values. Alternatives: 'minmax' (default), 'absmax', , or 2-tuple list of [min, max]. If minmax, colorbar starts at the smallest value to largest value. If absmax, then colorbar goes from -abs(max(value)) to abs(max(value)), ensuring 0 is in the middle.","title":"NODE KWARGS"},{"location":"api/#edge-kwargs","text":"Argument Type Description edgecols list Edge columns names in edge dataframe. Default is i and j (specifying nodes). edgecolor matplotlib coloring Can be string (default 'black') or list of 3D/4D colors for each edge. edgewidth int, float Specify width of edges. If auto, will plot the value in edge array (if array) or the weight column (if in pandas dataframe), otherwise 2. edgeweights str String that specifies column in edge dataframe that contains weights. If numpy array is edge input, can be True (default) to specify edge weights. edgealpha float Transparency of edges (default: 1). edgehighlightbehaviour str Alternatives \"both\" or \"any\" or None. Governs edge dimming when highlightnodes is on. If both, then highlights only edges between highlighted nodes. If any, then only edges connecting any of the nodes are highlighted. edgewidthscale int, float Scale the width of all edges by a factor (default: 1)","title":"EDGE KWARGS"},{"location":"api/#template-kwargs","text":"Argument Type Description templatecolor str If templatestyle=='surface' or 'filled', the color of template voxels templateedgethreshold float If templatestyle=='cloudy', can tweak the edges detection threshold. (Default: 0.7) templatealpha float Opacity of template voxels. templatevoxelsize int Resize voxels this size. Larger voxels = quicker. (Default: 2) surface_detection float The value used to detect the surface boundary (see argument level in marching_cubes). Some default choices are made for various templates surface_resolution int If templatestyle=='surface' controls the size of the triangles used in the surface reconstruction. (Default: 2).","title":"TEMPLATE KWARGS"},{"location":"api/#legendkwargs","text":"Argument Type Description nodecolorlegend Bool If the colorlegend is plotted or not. Default True. nodesizelegend Bool If the sizelegend is plotted or not. Default True. nodecolorlegendstyle str Alternatives: auto (default), discrete, continuous. If the color legend should show the entire colormap or discrete colors. If auto, plots discrete if less than 8 unique values are detected. legendtickfontsize str, int Matplotlib fontsize for title in figure legends legendtitlefontsize str, int Matplotlib fontsize for ticks in figure legends","title":"LEGENDKWARGS"},{"location":"api/#arrow-kwargs","text":"Argument Type Description arrowaxis list or str Adds axis arrows onto plot. Alternatives are: LR, AP, SI, 'all' arrowlength int, float Length of arrow arroworigin list x,y,z coordinates of arrowaxis. Note 0,0,0 is bottom left.","title":"ARROW KWARGS"},{"location":"api/#figure-kwargs","text":"Argument Type Description ax matplotlib 3D ax fig = plt.figure(). ax = fig.add_subplot(111, projection='3d'). netplotbrain.plot(ax, ...) fig matplotlib figure savename str Save path for figure. If string ends with .png or .svg it will one save this figure. if the path ends with anything else, it will save both a .png and .svg figure. Default: None and nothing is saved. figdpi int 300 Default. R esolution of figure when saving png files.","title":"FIGURE KWARGS"},{"location":"api/#gif-kwargs","text":"Argument Type Description gif bool If true, saves views as a gif. gifduration int Gif duration in milliseconds gifloop int How many times to loop figure. 0 (default) entails infinite loop.","title":"GIF KWARGS"},{"location":"api/#text-kwargs","text":"Argument Type Description font str font for all text in figure. fontcolor str, list, tuple font color for all text in figure titlefontsize str Size of title font (default: medium). See matplotlib \"fontsize\" titleloc str, Location of title (default: center). See matplotlib \"loc\" titleweight str Font weight of title (default: regular). See matplotlib \"fontweight\"","title":"TEXT KWARGS"},{"location":"api/#profile-kwargs","text":"Argument Type Description profile str path or name of file in netplotbrain/profiles/ .json, specifies default kwargs. Default points to netplotbrain/profiles/default.json","title":"PROFILE KWARGS"},{"location":"cite/","text":"Citation If using netplotbrain in an academic article, please cite the package and the libraries it relies on. Suggestion of text in methods section: Methods Network plots were generated using netplotbrain (Thompson & Fanton 2021), which utilizes templateflow (Ciric et al 2021), matplotlib (Hunter 2007), pandas (McKinney 2011), numpy (Harris et al 2020), scipy (Virtanen et al 2020), nibabel (Brett et al 2020), and scikit-image (van der Walt et al 2014). References Brett, Matthew, Markiewicz, Christopher J., Hanke, Michael, C\u00f4t\u00e9, Marc-Alexandre, Cipollini, Ben, McCarthy, Paul, et al (2020, November 28). nipy/nibabel: 3.2.1 (Version 3.2.1). Zenodo. http://doi.org/10.5281/zenodo.4295521 Ciric, R., Lorenz, R., Thompson, W. H., Goncalves, M., MacNicol, E., Markiewicz, C., ... & Esteban, O. (2021). TemplateFlow: a community archive of imaging templates and atlases for improved consistency in neuroimaging. bioRxiv. Harris, C. R., Millman, K. J., van der Walt, S. J., Gommers, R., Virtanen, P., Cournapeau, D., ... & Oliphant, T. E. (2020). Array programming with NumPy. Nature, 585(7825), 357-362. Hunter, J. D. (2007). Matplotlib: A 2D graphics environment. IEEE Annals of the History of Computing, 9(03), 90-95. McKinney, W. (2011). pandas: a foundational Python library for data analysis and statistics. Python for High Performance and Scientific Computing, 14(9), 1-9. Thompson WH, & Fanton S. (2021, 10 March). wiheto/netplotbrain:. Zenodo. doi :10.5281/zenodo.4593837 Van der Walt, S., Sch\u00f6nberger, J. L., Nunez-Iglesias, J., Boulogne, F., Warner, J. D., Yager, N., ... & Yu, T. (2014). scikit-image: image processing in Python. PeerJ, 2, e453. Virtanen, P., Gommers, R., Oliphant, T. E., Haberland, M., Reddy, T., Cournapeau, D., ... & van Mulbregt, P. (2020). SciPy 1.0: fundamental algorithms for scientific computing in Python. Nature methods, 17(3), 261-272.","title":"Citation"},{"location":"cite/#citation","text":"If using netplotbrain in an academic article, please cite the package and the libraries it relies on. Suggestion of text in methods section:","title":"Citation"},{"location":"cite/#methods","text":"Network plots were generated using netplotbrain (Thompson & Fanton 2021), which utilizes templateflow (Ciric et al 2021), matplotlib (Hunter 2007), pandas (McKinney 2011), numpy (Harris et al 2020), scipy (Virtanen et al 2020), nibabel (Brett et al 2020), and scikit-image (van der Walt et al 2014).","title":"Methods"},{"location":"cite/#references","text":"Brett, Matthew, Markiewicz, Christopher J., Hanke, Michael, C\u00f4t\u00e9, Marc-Alexandre, Cipollini, Ben, McCarthy, Paul, et al (2020, November 28). nipy/nibabel: 3.2.1 (Version 3.2.1). Zenodo. http://doi.org/10.5281/zenodo.4295521 Ciric, R., Lorenz, R., Thompson, W. H., Goncalves, M., MacNicol, E., Markiewicz, C., ... & Esteban, O. (2021). TemplateFlow: a community archive of imaging templates and atlases for improved consistency in neuroimaging. bioRxiv. Harris, C. R., Millman, K. J., van der Walt, S. J., Gommers, R., Virtanen, P., Cournapeau, D., ... & Oliphant, T. E. (2020). Array programming with NumPy. Nature, 585(7825), 357-362. Hunter, J. D. (2007). Matplotlib: A 2D graphics environment. IEEE Annals of the History of Computing, 9(03), 90-95. McKinney, W. (2011). pandas: a foundational Python library for data analysis and statistics. Python for High Performance and Scientific Computing, 14(9), 1-9. Thompson WH, & Fanton S. (2021, 10 March). wiheto/netplotbrain:. Zenodo. doi :10.5281/zenodo.4593837 Van der Walt, S., Sch\u00f6nberger, J. L., Nunez-Iglesias, J., Boulogne, F., Warner, J. D., Yager, N., ... & Yu, T. (2014). scikit-image: image processing in Python. PeerJ, 2, e453. Virtanen, P., Gommers, R., Oliphant, T. E., Haberland, M., Reddy, T., Cournapeau, D., ... & van Mulbregt, P. (2020). SciPy 1.0: fundamental algorithms for scientific computing in Python. Nature methods, 17(3), 261-272.","title":"References"},{"location":"gallary/","text":"Gallery Simple Figures A single view Source Code Three images Dual row figures Source Code TemplateFLow Atlases MNIInfant Source Code WHS (rat) Source Code","title":"Gallery"},{"location":"gallary/#gallery","text":"","title":"Gallery"},{"location":"gallary/#simple-figures","text":"","title":"Simple Figures"},{"location":"gallary/#a-single-view","text":"Source Code","title":"A single view"},{"location":"gallary/#three-images","text":"","title":"Three images"},{"location":"gallary/#dual-row-figures","text":"Source Code","title":"Dual row figures"},{"location":"gallary/#templateflow-atlases","text":"","title":"TemplateFLow Atlases"},{"location":"gallary/#mniinfant","text":"Source Code","title":"MNIInfant"},{"location":"gallary/#whs-rat","text":"Source Code","title":"WHS (rat)"},{"location":"tutorial/","text":"Tutorial In this section there are files on different components of netplotbrain. The tutorial is split into two section. Section 1: the basics In this section, we consider the three different components that can be involved in a netplotbrain plot. Here we primarily consider the different types of input. There are three components: (1) the nodes, (2) the edges, (3) the template Each component functions independently. You do not need to have all of them specified. Section 2: customization In this section, we expand upon the basics knowledge and start to customize the plots.","title":"Tutorial"},{"location":"tutorial/#tutorial","text":"In this section there are files on different components of netplotbrain. The tutorial is split into two section.","title":"Tutorial"},{"location":"tutorial/#section-1-the-basics","text":"In this section, we consider the three different components that can be involved in a netplotbrain plot. Here we primarily consider the different types of input. There are three components: (1) the nodes, (2) the edges, (3) the template Each component functions independently. You do not need to have all of them specified.","title":"Section 1: the basics"},{"location":"tutorial/#section-2-customization","text":"In this section, we expand upon the basics knowledge and start to customize the plots.","title":"Section 2: customization"},{"location":"gallary/infant/","text":"Template from TemplateFlow: MNIInfant # Import packages import netplotbrain import pandas as pd # Load example data nodes = pd.read_csv('./example_nodes.tsv', sep='\\t', index_col=0) edges = pd.read_csv('./example_edges.tsv', sep='\\t', index_col=0) # Rescale example node data to fit template nodes_inf = nodes.copy() nodes_inf['x'] = nodes_inf['x'] / 1.25 nodes_inf['y'] = nodes_inf['y'] / 1.25 nodes_inf['z'] = nodes_inf['z'] / 1.25 # Plot figure netplotbrain.plot(template='MNIInfant', templatestyle='surface', title='Infant template', view='LSR', nodes=nodes_inf, nodesize='centrality_measure1', nodecolorby='community', nodescale=80, edges=edges, templatevoxsize=5) [1] 2022-04-04 22:49:15 ( 35.0s ) python385jvsc74a57bd069c14fe6a4019cf19dd12dd3091b1b1b13cd2cf9e284738f49263cf911c99368 ( 3min55s ) Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-1/tpl-MNIInfant_cohort-1_res-1_desc-brain_mask.nii.gz 0%| | 0.00/114k [00:00<?, ?B/s] 45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589 | 51.2k/114k [00:00<00:00, 305kB/s] 85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d | 96.3k/114k [00:00<00:00, 337kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 114k/114k [00:00<00:00, 412kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-1/tpl-MNIInfant_cohort-1_res-2_desc-brain_mask.nii.gz 0%| | 0.00/19.1k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 19.1k/19.1k [00:00<00:00, 199kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-2/tpl-MNIInfant_cohort-2_res-1_desc-brain_mask.nii.gz 0%| | 0.00/110k [00:00<?, ?B/s] 47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d | 52.2k/110k [00:00<00:00, 283kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 110k/110k [00:00<00:00, 554kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-2/tpl-MNIInfant_cohort-2_res-2_desc-brain_mask.nii.gz 0%| | 0.00/18.7k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 18.7k/18.7k [00:00<00:00, 203kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-3/tpl-MNIInfant_cohort-3_res-1_desc-brain_mask.nii.gz 0%| | 0.00/114k [00:00<?, ?B/s] 45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589 | 51.2k/114k [00:00<00:00, 271kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 114k/114k [00:00<00:00, 394kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-3/tpl-MNIInfant_cohort-3_res-2_desc-brain_mask.nii.gz 0%| | 0.00/19.9k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 19.9k/19.9k [00:00<00:00, 220kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-4/tpl-MNIInfant_cohort-4_res-1_desc-brain_mask.nii.gz 0%| | 0.00/115k [00:00<?, ?B/s] 29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589 | 33.8k/115k [00:00<00:00, 330kB/s] 75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f | 86.0k/115k [00:00<00:00, 364kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 115k/115k [00:00<00:00, 523kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-4/tpl-MNIInfant_cohort-4_res-2_desc-brain_mask.nii.gz 0%| | 0.00/19.6k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 19.6k/19.6k [00:00<00:00, 217kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-5/tpl-MNIInfant_cohort-5_res-1_desc-brain_mask.nii.gz 0%| | 0.00/117k [00:00<?, ?B/s] 46%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d | 53.2k/117k [00:00<00:00, 375kB/s] 91%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589 | 106k/117k [00:00<00:00, 382kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 117k/117k [00:00<00:00, 414kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-5/tpl-MNIInfant_cohort-5_res-2_desc-brain_mask.nii.gz 0%| | 0.00/19.9k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 19.9k/19.9k [00:00<00:00, 215kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-6/tpl-MNIInfant_cohort-6_res-1_desc-brain_mask.nii.gz 0%| | 0.00/117k [00:00<?, ?B/s] 45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 52.2k/117k [00:00<00:00, 292kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 117k/117k [00:00<00:00, 473kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-6/tpl-MNIInfant_cohort-6_res-2_desc-brain_mask.nii.gz 0%| | 0.00/20.3k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20.3k/20.3k [00:00<00:00, 222kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-7/tpl-MNIInfant_cohort-7_res-1_desc-brain_mask.nii.gz 0%| | 0.00/120k [00:00<?, ?B/s] 29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 34.8k/120k [00:00<00:00, 194kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 120k/120k [00:00<00:00, 436kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-7/tpl-MNIInfant_cohort-7_res-2_desc-brain_mask.nii.gz 0%| | 0.00/20.7k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20.7k/20.7k [00:00<00:00, 224kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-8/tpl-MNIInfant_cohort-8_res-1_desc-brain_mask.nii.gz 0%| | 0.00/122k [00:00<?, ?B/s] 43%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 52.2k/122k [00:00<00:00, 289kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 122k/122k [00:00<00:00, 441kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-8/tpl-MNIInfant_cohort-8_res-2_desc-brain_mask.nii.gz 0%| | 0.00/21.1k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 21.1k/21.1k [00:00<00:00, 205kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 21.1k/21.1k [00:00<00:00, 197kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-9/tpl-MNIInfant_cohort-9_res-1_desc-brain_mask.nii.gz 0%| | 0.00/122k [00:00<?, ?B/s] 43%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a | 52.2k/122k [00:00<00:00, 285kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 122k/122k [00:00<00:00, 437kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-9/tpl-MNIInfant_cohort-9_res-2_desc-brain_mask.nii.gz 0%| | 0.00/20.9k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20.9k/20.9k [00:00<00:00, 222kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-10/tpl-MNIInfant_cohort-10_res-1_desc-brain_mask.nii.gz 0%| | 0.00/123k [00:00<?, ?B/s] 43%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e | 52.2k/123k [00:00<00:00, 280kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 123k/123k [00:00<00:00, 341kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 123k/123k [00:00<00:00, 421kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-10/tpl-MNIInfant_cohort-10_res-2_desc-brain_mask.nii.gz 0%| | 0.00/20.8k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20.8k/20.8k [00:00<00:00, 229kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-11/tpl-MNIInfant_cohort-11_res-1_desc-brain_mask.nii.gz 0%| | 0.00/122k [00:00<?, ?B/s] 43%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a | 52.2k/122k [00:00<00:00, 284kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 122k/122k [00:00<00:00, 615kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-11/tpl-MNIInfant_cohort-11_res-2_desc-brain_mask.nii.gz 0%| | 0.00/20.8k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20.8k/20.8k [00:00<00:00, 227kB/s] (<Figure size 648x288 with 5 Axes>, [<Axes3DSubplot:title={'center':'Infant template'}>, <Axes3DSubplot:title={'center':'Infant template'}>, <Axes3DSubplot:title={'center':'Infant template'}>, <AxesSubplot:>, <AxesSubplot:>])","title":"Infant"},{"location":"gallary/infant/#template-from-templateflow-mniinfant","text":"# Import packages import netplotbrain import pandas as pd # Load example data nodes = pd.read_csv('./example_nodes.tsv', sep='\\t', index_col=0) edges = pd.read_csv('./example_edges.tsv', sep='\\t', index_col=0) # Rescale example node data to fit template nodes_inf = nodes.copy() nodes_inf['x'] = nodes_inf['x'] / 1.25 nodes_inf['y'] = nodes_inf['y'] / 1.25 nodes_inf['z'] = nodes_inf['z'] / 1.25 # Plot figure netplotbrain.plot(template='MNIInfant', templatestyle='surface', title='Infant template', view='LSR', nodes=nodes_inf, nodesize='centrality_measure1', nodecolorby='community', nodescale=80, edges=edges, templatevoxsize=5) [1] 2022-04-04 22:49:15 ( 35.0s ) python385jvsc74a57bd069c14fe6a4019cf19dd12dd3091b1b1b13cd2cf9e284738f49263cf911c99368 ( 3min55s ) Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-1/tpl-MNIInfant_cohort-1_res-1_desc-brain_mask.nii.gz 0%| | 0.00/114k [00:00<?, ?B/s] 45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589 | 51.2k/114k [00:00<00:00, 305kB/s] 85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d | 96.3k/114k [00:00<00:00, 337kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 114k/114k [00:00<00:00, 412kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-1/tpl-MNIInfant_cohort-1_res-2_desc-brain_mask.nii.gz 0%| | 0.00/19.1k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 19.1k/19.1k [00:00<00:00, 199kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-2/tpl-MNIInfant_cohort-2_res-1_desc-brain_mask.nii.gz 0%| | 0.00/110k [00:00<?, ?B/s] 47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d | 52.2k/110k [00:00<00:00, 283kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 110k/110k [00:00<00:00, 554kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-2/tpl-MNIInfant_cohort-2_res-2_desc-brain_mask.nii.gz 0%| | 0.00/18.7k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 18.7k/18.7k [00:00<00:00, 203kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-3/tpl-MNIInfant_cohort-3_res-1_desc-brain_mask.nii.gz 0%| | 0.00/114k [00:00<?, ?B/s] 45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589 | 51.2k/114k [00:00<00:00, 271kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 114k/114k [00:00<00:00, 394kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-3/tpl-MNIInfant_cohort-3_res-2_desc-brain_mask.nii.gz 0%| | 0.00/19.9k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 19.9k/19.9k [00:00<00:00, 220kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-4/tpl-MNIInfant_cohort-4_res-1_desc-brain_mask.nii.gz 0%| | 0.00/115k [00:00<?, ?B/s] 29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589 | 33.8k/115k [00:00<00:00, 330kB/s] 75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f | 86.0k/115k [00:00<00:00, 364kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 115k/115k [00:00<00:00, 523kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-4/tpl-MNIInfant_cohort-4_res-2_desc-brain_mask.nii.gz 0%| | 0.00/19.6k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 19.6k/19.6k [00:00<00:00, 217kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-5/tpl-MNIInfant_cohort-5_res-1_desc-brain_mask.nii.gz 0%| | 0.00/117k [00:00<?, ?B/s] 46%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d | 53.2k/117k [00:00<00:00, 375kB/s] 91%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589 | 106k/117k [00:00<00:00, 382kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 117k/117k [00:00<00:00, 414kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-5/tpl-MNIInfant_cohort-5_res-2_desc-brain_mask.nii.gz 0%| | 0.00/19.9k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 19.9k/19.9k [00:00<00:00, 215kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-6/tpl-MNIInfant_cohort-6_res-1_desc-brain_mask.nii.gz 0%| | 0.00/117k [00:00<?, ?B/s] 45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 52.2k/117k [00:00<00:00, 292kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 117k/117k [00:00<00:00, 473kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-6/tpl-MNIInfant_cohort-6_res-2_desc-brain_mask.nii.gz 0%| | 0.00/20.3k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20.3k/20.3k [00:00<00:00, 222kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-7/tpl-MNIInfant_cohort-7_res-1_desc-brain_mask.nii.gz 0%| | 0.00/120k [00:00<?, ?B/s] 29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 34.8k/120k [00:00<00:00, 194kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 120k/120k [00:00<00:00, 436kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-7/tpl-MNIInfant_cohort-7_res-2_desc-brain_mask.nii.gz 0%| | 0.00/20.7k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20.7k/20.7k [00:00<00:00, 224kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-8/tpl-MNIInfant_cohort-8_res-1_desc-brain_mask.nii.gz 0%| | 0.00/122k [00:00<?, ?B/s] 43%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 52.2k/122k [00:00<00:00, 289kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 122k/122k [00:00<00:00, 441kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-8/tpl-MNIInfant_cohort-8_res-2_desc-brain_mask.nii.gz 0%| | 0.00/21.1k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 21.1k/21.1k [00:00<00:00, 205kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 21.1k/21.1k [00:00<00:00, 197kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-9/tpl-MNIInfant_cohort-9_res-1_desc-brain_mask.nii.gz 0%| | 0.00/122k [00:00<?, ?B/s] 43%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a | 52.2k/122k [00:00<00:00, 285kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 122k/122k [00:00<00:00, 437kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-9/tpl-MNIInfant_cohort-9_res-2_desc-brain_mask.nii.gz 0%| | 0.00/20.9k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20.9k/20.9k [00:00<00:00, 222kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-10/tpl-MNIInfant_cohort-10_res-1_desc-brain_mask.nii.gz 0%| | 0.00/123k [00:00<?, ?B/s] 43%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e | 52.2k/123k [00:00<00:00, 280kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 123k/123k [00:00<00:00, 341kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 123k/123k [00:00<00:00, 421kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-10/tpl-MNIInfant_cohort-10_res-2_desc-brain_mask.nii.gz 0%| | 0.00/20.8k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20.8k/20.8k [00:00<00:00, 229kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-11/tpl-MNIInfant_cohort-11_res-1_desc-brain_mask.nii.gz 0%| | 0.00/122k [00:00<?, ?B/s] 43%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a | 52.2k/122k [00:00<00:00, 284kB/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 122k/122k [00:00<00:00, 615kB/s] Downloading https://templateflow.s3.amazonaws.com/tpl-MNIInfant/cohort-11/tpl-MNIInfant_cohort-11_res-2_desc-brain_mask.nii.gz 0%| | 0.00/20.8k [00:00<?, ?B/s] 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 20.8k/20.8k [00:00<00:00, 227kB/s] (<Figure size 648x288 with 5 Axes>, [<Axes3DSubplot:title={'center':'Infant template'}>, <Axes3DSubplot:title={'center':'Infant template'}>, <Axes3DSubplot:title={'center':'Infant template'}>, <AxesSubplot:>, <AxesSubplot:>])","title":"Template from TemplateFlow: MNIInfant"},{"location":"gallary/simple/","text":"Simple single view import netplotbrain import pandas as pd # Example node and edges dataframes included with package nodes = pd.read_csv('./example_nodes.tsv', sep='\\t', index_col=0) edges = pd.read_csv('./example_edges.tsv', sep='\\t', index_col=0) # Plot single view netplotbrain.plot(template='MNI152NLin2009cAsym', templatestyle='surface', view='LSR', nodes=nodes, nodescale=40, nodesize='centrality_measure1', edges=edges, nodecolorby='community') [1] 2022-04-04 23:06:01 ( 1min36s ) python385jvsc74a57bd069c14fe6a4019cf19dd12dd3091b1b1b13cd2cf9e284738f49263cf911c99368 ( 1min36s ) (<Figure size 648x288 with 5 Axes>, [<Axes3DSubplot:title={'center':'Left'}>, <Axes3DSubplot:title={'center':'Superior'}>, <Axes3DSubplot:title={'center':'Right'}>, <AxesSubplot:>, <AxesSubplot:>])","title":"Simple"},{"location":"gallary/simple/#simple-single-view","text":"import netplotbrain import pandas as pd # Example node and edges dataframes included with package nodes = pd.read_csv('./example_nodes.tsv', sep='\\t', index_col=0) edges = pd.read_csv('./example_edges.tsv', sep='\\t', index_col=0) # Plot single view netplotbrain.plot(template='MNI152NLin2009cAsym', templatestyle='surface', view='LSR', nodes=nodes, nodescale=40, nodesize='centrality_measure1', edges=edges, nodecolorby='community') [1] 2022-04-04 23:06:01 ( 1min36s ) python385jvsc74a57bd069c14fe6a4019cf19dd12dd3091b1b1b13cd2cf9e284738f49263cf911c99368 ( 1min36s ) (<Figure size 648x288 with 5 Axes>, [<Axes3DSubplot:title={'center':'Left'}>, <Axes3DSubplot:title={'center':'Superior'}>, <Axes3DSubplot:title={'center':'Right'}>, <AxesSubplot:>, <AxesSubplot:>])","title":"Simple single view"},{"location":"gallary/two_rows/","text":"Figures over multiple rows # Import packages import netplotbrain import pandas as pd # Load example data nodes = pd.read_csv('./example_nodes.tsv', sep='\\t', index_col=0) edges = pd.read_csv('./example_edges.tsv', sep='\\t', index_col=0) # Plot figure netplotbrain.plot(template='MNI152NLin2009cAsym', templatestyle='surface', nodes=nodes, nodesize='centrality_measure1', edges=edges, nodecolorby='community', view=['LSR', 'AIP'], frames=2) [1] 2022-04-04 21:59:18 ( 3min18s ) python385jvsc74a57bd069c14fe6a4019cf19dd12dd3091b1b1b13cd2cf9e284738f49263cf911c99368 ( 3min18s ) (<Figure size 648x504 with 8 Axes>, [<Axes3DSubplot:title={'center':'Left'}>, <Axes3DSubplot:title={'center':'Superior'}>, <Axes3DSubplot:title={'center':'Right'}>, <Axes3DSubplot:title={'center':'Anterior'}>, <Axes3DSubplot:title={'center':'Inferior'}>, <Axes3DSubplot:title={'center':'Posterior'}>, <AxesSubplot:>, <AxesSubplot:>])","title":"Two rows"},{"location":"gallary/two_rows/#figures-over-multiple-rows","text":"# Import packages import netplotbrain import pandas as pd # Load example data nodes = pd.read_csv('./example_nodes.tsv', sep='\\t', index_col=0) edges = pd.read_csv('./example_edges.tsv', sep='\\t', index_col=0) # Plot figure netplotbrain.plot(template='MNI152NLin2009cAsym', templatestyle='surface', nodes=nodes, nodesize='centrality_measure1', edges=edges, nodecolorby='community', view=['LSR', 'AIP'], frames=2) [1] 2022-04-04 21:59:18 ( 3min18s ) python385jvsc74a57bd069c14fe6a4019cf19dd12dd3091b1b1b13cd2cf9e284738f49263cf911c99368 ( 3min18s ) (<Figure size 648x504 with 8 Axes>, [<Axes3DSubplot:title={'center':'Left'}>, <Axes3DSubplot:title={'center':'Superior'}>, <Axes3DSubplot:title={'center':'Right'}>, <Axes3DSubplot:title={'center':'Anterior'}>, <Axes3DSubplot:title={'center':'Inferior'}>, <Axes3DSubplot:title={'center':'Posterior'}>, <AxesSubplot:>, <AxesSubplot:>])","title":"Figures over multiple rows"},{"location":"gallary/whs/","text":"Template from TemplateFlow: WHS # Import packages import netplotbrain import pandas as pd # Load example data nodes = pd.read_csv('./example_nodes.tsv', sep='\\t', index_col=0) edges = pd.read_csv('./example_edges.tsv', sep='\\t', index_col=0) # Rescale example node data to fit template nodes_whs = nodes.copy() nodes_whs['x'] = nodes_whs['x'] / 8 nodes_whs['y'] = nodes_whs['y'] / 8 nodes_whs['z'] = nodes_whs['z'] / 8 # Plot figure netplotbrain.plot(template='WHS', templatestyle='surface', title='Multiple templates possible', view='LSR', nodes=nodes_whs, nodesize='centrality_measure1', edges=edges, nodecolorby='community', nodescale=80, templatevoxsize=0.2) [1] 2022-04-04 23:07:37 ( 2min47s ) python385jvsc74a57bd069c14fe6a4019cf19dd12dd3091b1b1b13cd2cf9e284738f49263cf911c99368 ( 4min22s ) (<Figure size 648x288 with 5 Axes>, [<Axes3DSubplot:title={'center':'Multiple templates possible'}>, <Axes3DSubplot:title={'center':'Multiple templates possible'}>, <Axes3DSubplot:title={'center':'Multiple templates possible'}>, <AxesSubplot:>, <AxesSubplot:>])","title":"Whs"},{"location":"gallary/whs/#template-from-templateflow-whs","text":"# Import packages import netplotbrain import pandas as pd # Load example data nodes = pd.read_csv('./example_nodes.tsv', sep='\\t', index_col=0) edges = pd.read_csv('./example_edges.tsv', sep='\\t', index_col=0) # Rescale example node data to fit template nodes_whs = nodes.copy() nodes_whs['x'] = nodes_whs['x'] / 8 nodes_whs['y'] = nodes_whs['y'] / 8 nodes_whs['z'] = nodes_whs['z'] / 8 # Plot figure netplotbrain.plot(template='WHS', templatestyle='surface', title='Multiple templates possible', view='LSR', nodes=nodes_whs, nodesize='centrality_measure1', edges=edges, nodecolorby='community', nodescale=80, templatevoxsize=0.2) [1] 2022-04-04 23:07:37 ( 2min47s ) python385jvsc74a57bd069c14fe6a4019cf19dd12dd3091b1b1b13cd2cf9e284738f49263cf911c99368 ( 4min22s ) (<Figure size 648x288 with 5 Axes>, [<Axes3DSubplot:title={'center':'Multiple templates possible'}>, <Axes3DSubplot:title={'center':'Multiple templates possible'}>, <Axes3DSubplot:title={'center':'Multiple templates possible'}>, <AxesSubplot:>, <AxesSubplot:>])","title":"Template from TemplateFlow: WHS"},{"location":"tutorial/__init__/","text":".. include:: ./templates.md .. include:: ./nodes.md","title":"  init  "},{"location":"tutorial/edges/","text":"","title":"Edges"},{"location":"tutorial/highlighting_results/","text":"","title":"Highlighting results"},{"location":"tutorial/nodes/","text":"","title":"Nodes"},{"location":"tutorial/templates/","text":"","title":"Templates"}]}